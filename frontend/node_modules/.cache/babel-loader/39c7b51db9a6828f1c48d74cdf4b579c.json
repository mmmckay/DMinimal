{"remainingRequest":"/Users/daren.mcculley/go/src/github.com/mcculleydj/DMinimal/frontend/node_modules/babel-loader/lib/index.js!/Users/daren.mcculley/go/src/github.com/mcculleydj/DMinimal/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/daren.mcculley/go/src/github.com/mcculleydj/DMinimal/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/daren.mcculley/go/src/github.com/mcculleydj/DMinimal/frontend/src/components/SpellCast.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/daren.mcculley/go/src/github.com/mcculleydj/DMinimal/frontend/src/components/SpellCast.vue","mtime":1539899859882},{"path":"/Users/daren.mcculley/go/src/github.com/mcculleydj/DMinimal/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1539818865210},{"path":"/Users/daren.mcculley/go/src/github.com/mcculleydj/DMinimal/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/daren.mcculley/go/src/github.com/mcculleydj/DMinimal/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1539818865210},{"path":"/Users/daren.mcculley/go/src/github.com/mcculleydj/DMinimal/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  props: ['charIndex'],\n  computed: {\n    character: function character() {\n      return this.$store.state.characters[this.charIndex];\n    },\n    classItem: function classItem() {\n      return this.character.classes[this.selectedClass];\n    },\n    concentrating: function concentrating() {\n      return this.character.concentrating;\n    },\n    currSpellInfo: function currSpellInfo() {\n      return this.$store.state.spellsInfo.currSpellInfo;\n    },\n    currSpellClass: function currSpellClass() {\n      return this.$store.state.spellsInfo.className;\n    },\n    magicClassOpts: function magicClassOpts() {\n      return this.$store.state.magicClassOpts;\n    },\n    spellOpts: function spellOpts() {\n      return this.$store.state.spellsInfo.spellList;\n    },\n    workingSlots: function workingSlots() {\n      return this.classItem.workingSlots;\n    }\n  },\n  data: function data() {\n    return {\n      spellSearchDialogOpts: {\n        Level: 'Level',\n        School: 'School',\n        Duration: 'Duration',\n        SpellRange: 'Range',\n        Components: 'Components'\n      },\n      // why is this shameful?\n      classChoiceDialog: false,\n      spellSearchDialog: false,\n      atHigherLevelDialog: false,\n      classChoices: [],\n      input: '',\n      spellInput: '',\n      selectedClass: 0,\n      snackbarMessage: '',\n      snackbar: false\n    };\n  },\n  watch: {\n    spellInput: function spellInput(val) {\n      var _this = this;\n\n      if (this.currSpellInfo.hasOwnProperty('Name') && val === this.currSpellInfo.Name) {\n        return;\n      }\n\n      var r = new Request('http://localhost:8010/magic/spell/' + val, {\n        method: 'GET'\n      });\n      fetch(r).then(function (response) {\n        if (response.status === 200) {\n          return response.json();\n        } else {\n          throw new Error('Something went wrong on api server!');\n        }\n      }).then(function (response) {\n        _this.$store.commit('setSpellInfo', response);\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  },\n  methods: {\n    spellPreflight: function spellPreflight() {\n      var magicClasses = [];\n\n      for (var c in this.character.classes) {\n        if (this.magicClassOpts.includes(this.character.classes[c].classname)) {\n          magicClasses.push(c);\n        }\n      }\n\n      if (magicClasses.length > 1) {\n        this.classChoices = magicClasses;\n        this.classChoiceDialog = true;\n      } else if (magicClasses.length === 1) {\n        this.selectedClass = 0;\n        this.spellSearchDialog = true;\n        this.fetchSpellOpts();\n      } else {\n        this.$store.commit('showSnackbar', {\n          message: 'Cannot Cast Spells: No Magic Classes'\n        });\n      }\n    },\n    fetchSpellOpts: function fetchSpellOpts() {\n      var _this2 = this;\n\n      if (this.currSpellClass === this.classItem.classname) {\n        return;\n      }\n\n      var strBody = JSON.stringify({\n        classes: [this.classItem.classname],\n        spellName: ''\n      });\n      var r = new Request('http://localhost:8010/magic/search/', {\n        method: 'Post',\n        body: strBody\n      });\n      var opts = [];\n      fetch(r).then(function (response) {\n        if (response.status === 200) {\n          return response.json();\n        } else {\n          throw new Error('Something went wrong on api server!');\n        }\n      }).then(function (response) {\n        opts = response.spellOpts;\n\n        _this2.$store.commit('setSpellOpts', {\n          spellOpts: opts,\n          className: _this2.classItem.classname\n        });\n\n        _this2.spellSearchDialog = true;\n      }).catch(function (error) {\n        console.error(error);\n      });\n    },\n    stopConcentrating: function stopConcentrating() {\n      this.$store.commit('stopConcentrating', this.charIndex);\n      this.$store.commit('hideSnackbar');\n    },\n    castSpell: function castSpell() {\n      if (this.concentrating && this.currSpellInfo.hasOwnProperty('Concentration')) {\n        // launch concentration snackbar\n        this.$store.commit('showSnackbar', {\n          message: 'Concentrating on ' + this.concentrating,\n          func: this.stopConcentrating,\n          buttonMessage: 'Stop Concentrating'\n        });\n        return;\n      }\n\n      if (this.workingSlots[this.currSpellInfo.Level.toString()] !== 0) {\n        this.$store.commit('decrementSlot', {\n          charIndex: this.charIndex,\n          classIndex: this.selectedClass,\n          level: this.currSpellInfo.Level\n        });\n        this.spellSearchDialog = false;\n        return;\n      }\n\n      var slotsAvailable = false;\n\n      for (var i = this.currSpellInfo.Level + 1; i < 10; i++) {\n        if (this.workingSlots[i.toString()] > 0) {\n          slotsAvailable = true;\n          break;\n        }\n      }\n\n      var payload = {\n        message: 'No slots available at spell level'\n      };\n\n      if (slotsAvailable) {\n        payload['func'] = this.openAtHigherLevelDialog;\n        payload['buttonMessage'] = 'Cast at Higher Level?';\n      }\n\n      this.$store.commit('showSnackbar', payload);\n    },\n    openAtHigherLevelDialog: function openAtHigherLevelDialog() {\n      this.atHigherLevelDialog = true;\n      this.$store.commit('hideSnackbar');\n    },\n    castSpellAtLvl: function castSpellAtLvl(level) {\n      this.$store.commit('decrementSlot', {\n        charIndex: this.charIndex,\n        classIndex: this.selectedClass,\n        level: level\n      });\n      this.atHigherLevelDialog = false;\n      this.spellSearchDialog = false;\n    }\n  }\n};",{"version":3,"sources":["SpellCast.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuEA,eAAA;AACA,SAAA,CAAA,WAAA,CADA;AAEA,YAAA;AACA,aADA,uBACA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,UAAA,CAAA,KAAA,SAAA,CAAA;AACA,KAHA;AAIA,aAJA,uBAIA;AACA,aAAA,KAAA,SAAA,CAAA,OAAA,CAAA,KAAA,aAAA,CAAA;AACA,KANA;AAOA,iBAPA,2BAOA;AACA,aAAA,KAAA,SAAA,CAAA,aAAA;AACA,KATA;AAUA,iBAVA,2BAUA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,UAAA,CAAA,aAAA;AACA,KAZA;AAaA,kBAbA,4BAaA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,UAAA,CAAA,SAAA;AACA,KAfA;AAgBA,kBAhBA,4BAgBA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,cAAA;AACA,KAlBA;AAmBA,aAnBA,uBAmBA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,UAAA,CAAA,SAAA;AACA,KArBA;AAsBA,gBAtBA,0BAsBA;AACA,aAAA,KAAA,SAAA,CAAA,YAAA;AACA;AAxBA,GAFA;AA4BA,MA5BA,kBA4BA;AACA,WAAA;AACA,6BAAA;AACA,eAAA,OADA;AAEA,gBAAA,QAFA;AAGA,kBAAA,UAHA;AAIA,oBAAA,OAJA;AAKA,oBAAA;AALA,OADA;AAOA;AACA,yBAAA,KARA;AASA,yBAAA,KATA;AAUA,2BAAA,KAVA;AAWA,oBAAA,EAXA;AAYA,aAAA,EAZA;AAaA,kBAAA,EAbA;AAcA,qBAAA,CAdA;AAeA,uBAAA,EAfA;AAgBA,gBAAA;AAhBA,KAAA;AAkBA,GA/CA;AAgDA,SAAA;AACA,cADA,sBACA,GADA,EACA;AAAA;;AACA,UACA,KAAA,aAAA,CAAA,cAAA,CAAA,MAAA,KACA,QAAA,KAAA,aAAA,CAAA,IAFA,EAGA;AACA;AACA;;AACA,UAAA,IAAA,IAAA,OAAA,CAAA,uCAAA,GAAA,EAAA;AACA,gBAAA;AADA,OAAA,CAAA;AAGA,YAAA,CAAA,EACA,IADA,CACA,oBAAA;AACA,YAAA,SAAA,MAAA,KAAA,GAAA,EAAA;AACA,iBAAA,SAAA,IAAA,EAAA;AACA,SAFA,MAEA;AACA,gBAAA,IAAA,KAAA,CAAA,qCAAA,CAAA;AACA;AACA,OAPA,EAQA,IARA,CAQA,oBAAA;AACA,cAAA,MAAA,CAAA,MAAA,CAAA,cAAA,EAAA,QAAA;AACA,OAVA,EAWA,KAXA,CAWA,iBAAA;AACA,gBAAA,KAAA,CAAA,KAAA;AACA,OAbA;AAcA;AAzBA,GAhDA;AA2EA,WAAA;AACA,kBADA,4BACA;AACA,UAAA,eAAA,EAAA;;AACA,WAAA,IAAA,CAAA,IAAA,KAAA,SAAA,CAAA,OAAA,EAAA;AACA,YAAA,KAAA,cAAA,CAAA,QAAA,CAAA,KAAA,SAAA,CAAA,OAAA,CAAA,CAAA,EAAA,SAAA,CAAA,EAAA;AACA,uBAAA,IAAA,CAAA,CAAA;AACA;AACA;;AACA,UAAA,aAAA,MAAA,GAAA,CAAA,EAAA;AACA,aAAA,YAAA,GAAA,YAAA;AACA,aAAA,iBAAA,GAAA,IAAA;AACA,OAHA,MAGA,IAAA,aAAA,MAAA,KAAA,CAAA,EAAA;AACA,aAAA,aAAA,GAAA,CAAA;AACA,aAAA,iBAAA,GAAA,IAAA;AACA,aAAA,cAAA;AACA,OAJA,MAIA;AACA,aAAA,MAAA,CAAA,MAAA,CAAA,cAAA,EAAA;AACA,mBAAA;AADA,SAAA;AAGA;AACA,KApBA;AAqBA,kBArBA,4BAqBA;AAAA;;AACA,UAAA,KAAA,cAAA,KAAA,KAAA,SAAA,CAAA,SAAA,EAAA;AACA;AACA;;AACA,UAAA,UAAA,KAAA,SAAA,CAAA;AACA,iBAAA,CAAA,KAAA,SAAA,CAAA,SAAA,CADA;AAEA,mBAAA;AAFA,OAAA,CAAA;AAIA,UAAA,IAAA,IAAA,OAAA,CAAA,qCAAA,EAAA;AACA,gBAAA,MADA;AAEA,cAAA;AAFA,OAAA,CAAA;AAIA,UAAA,OAAA,EAAA;AACA,YAAA,CAAA,EACA,IADA,CACA,oBAAA;AACA,YAAA,SAAA,MAAA,KAAA,GAAA,EAAA;AACA,iBAAA,SAAA,IAAA,EAAA;AACA,SAFA,MAEA;AACA,gBAAA,IAAA,KAAA,CAAA,qCAAA,CAAA;AACA;AACA,OAPA,EAQA,IARA,CAQA,oBAAA;AACA,eAAA,SAAA,SAAA;;AACA,eAAA,MAAA,CAAA,MAAA,CAAA,cAAA,EAAA;AACA,qBAAA,IADA;AAEA,qBAAA,OAAA,SAAA,CAAA;AAFA,SAAA;;AAIA,eAAA,iBAAA,GAAA,IAAA;AACA,OAfA,EAgBA,KAhBA,CAgBA,iBAAA;AACA,gBAAA,KAAA,CAAA,KAAA;AACA,OAlBA;AAmBA,KArDA;AAsDA,qBAtDA,+BAsDA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,mBAAA,EAAA,KAAA,SAAA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,cAAA;AACA,KAzDA;AA0DA,aA1DA,uBA0DA;AACA,UACA,KAAA,aAAA,IACA,KAAA,aAAA,CAAA,cAAA,CAAA,eAAA,CAFA,EAGA;AACA;AACA,aAAA,MAAA,CAAA,MAAA,CAAA,cAAA,EAAA;AACA,mBAAA,sBAAA,KAAA,aADA;AAEA,gBAAA,KAAA,iBAFA;AAGA,yBAAA;AAHA,SAAA;AAKA;AACA;;AACA,UAAA,KAAA,YAAA,CAAA,KAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,MAAA,CAAA,EAAA;AACA,aAAA,MAAA,CAAA,MAAA,CAAA,eAAA,EAAA;AACA,qBAAA,KAAA,SADA;AAEA,sBAAA,KAAA,aAFA;AAGA,iBAAA,KAAA,aAAA,CAAA;AAHA,SAAA;AAKA,aAAA,iBAAA,GAAA,KAAA;AACA;AACA;;AACA,UAAA,iBAAA,KAAA;;AACA,WAAA,IAAA,IAAA,KAAA,aAAA,CAAA,KAAA,GAAA,CAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA;AACA,YAAA,KAAA,YAAA,CAAA,EAAA,QAAA,EAAA,IAAA,CAAA,EAAA;AACA,2BAAA,IAAA;AACA;AACA;AACA;;AACA,UAAA,UAAA;AACA,iBAAA;AADA,OAAA;;AAGA,UAAA,cAAA,EAAA;AACA,gBAAA,MAAA,IAAA,KAAA,uBAAA;AACA,gBAAA,eAAA,IAAA,uBAAA;AACA;;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,cAAA,EAAA,OAAA;AACA,KA/FA;AAgGA,2BAhGA,qCAgGA;AACA,WAAA,mBAAA,GAAA,IAAA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,cAAA;AACA,KAnGA;AAoGA,kBApGA,0BAoGA,KApGA,EAoGA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,eAAA,EAAA;AACA,mBAAA,KAAA,SADA;AAEA,oBAAA,KAAA,aAFA;AAGA,eAAA;AAHA,OAAA;AAKA,WAAA,mBAAA,GAAA,KAAA;AACA,WAAA,iBAAA,GAAA,KAAA;AACA;AA5GA;AA3EA,CAAA","sourcesContent":["<template>\n  <div>\n    <!-- Multiple Classes Dialog -->\n    <v-dialog v-model=\"classChoiceDialog\" max-width=\"300\">\n      <v-card>\n        <v-layout column align-center justify-center ma-2>\n          <h2>Cast as which class?</h2>\n          <v-btn @click=\"selectedClass = index; classChoiceDialog = false; fetchSpellOpts()\" flat v-for=\"(c, index) in character.classes\" :key=\"c.classname\">{{c.classname}}</v-btn>\n        </v-layout>\n      </v-card>\n    </v-dialog>\n    <!-- End Multiple Classes Dialog -->\n    <v-dialog persistent v-model=\"spellSearchDialog\" max-width=\"800\">\n      <v-card>\n        <v-card-title class=\"headline\">Find spell</v-card-title>\n        <v-card-text>\n          <v-autocomplete\n            v-model=\"spellInput\"\n            placeholder='Spell...'\n            :search-input.sync=\"input\"\n            :items=\"spellOpts\"\n          />\n        </v-card-text>\n        <v-card-text>\n          <h1>{{currSpellInfo.Name}}</h1>\n          <div v-if=\"currSpellInfo.hasOwnProperty('Concentration')\">Concentration</div>\n          <v-list dense>\n            <v-list-tile v-if=\"currSpellInfo.hasOwnProperty(elem)\" v-for=\"(elem, text) in spellSearchDialogOpts\" :key=\"elem\">\n              <v-list-tile-content><h3>{{text}}:</h3></v-list-tile-content>\n              <v-list-tile-content class=\"align-end\">{{ currSpellInfo[elem] }}</v-list-tile-content>\n            </v-list-tile>\n            <v-list-tile v-if=\"currSpellInfo.hasOwnProperty('Classes')\">\n              <v-list-tile-content><h3>Classes:</h3></v-list-tile-content>\n              <v-list-tile-content v-if=\"currSpellInfo.Classes\" class=\"align-end\">{{ currSpellInfo.Classes.join(\", \") }}</v-list-tile-content>\n            </v-list-tile>\n            <v-list-tile v-if=\"currSpellInfo.hasOwnProperty('AtHigherLevels') && currSpellInfo.AtHigherLevels !== ''\">\n              <v-list-tile-content><h3>At Higher Levels:</h3></v-list-tile-content>\n            </v-list-tile>\n            <v-list-tile v-if=\"currSpellInfo.hasOwnProperty('AtHigherLevels') && currSpellInfo.AtHigherLevels !== ''\">\n              <v-list-tile-content>{{ currSpellInfo.AtHigherLevels }}</v-list-tile-content>\n            </v-list-tile>\n            <v-list-tile v-if=\"currSpellInfo.hasOwnProperty('Description')\">\n              <v-list-tile-content><h3>Description:</h3></v-list-tile-content>\n            </v-list-tile>\n            <v-list-tile-content v-if=\"currSpellInfo.hasOwnProperty('Description')\">{{ currSpellInfo.Description }}</v-list-tile-content>\n          </v-list>\n        </v-card-text>\n        <v-card-actions>\n          <v-btn color=\"red lighten-1\" flat @click=\"spellSearchDialog = false\"> Close </v-btn>\n          <v-btn color=\"green lighten-1\" flat @click=\"castSpell()\"> Cast </v-btn>\n          <v-btn color=\"yellow darken-1\" flat @click=\"atHigherLevelDialog=true\"> At Higher Level </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n    <v-dialog v-model=\"atHigherLevelDialog\" max-width=\"200\">\n      <v-card>\n        <v-layout column justify-center align-center>\n          <h2>Cast at level...</h2>\n          <v-btn flat v-for=\"(value, level) in this.workingSlots\"\n            v-if=\"value > 0 && parseInt(level, 10) > currSpellInfo.Level\"\n            @click=\"castSpellAtLvl(parseInt(level, 10))\" :key=\"level\">\n              {{level}}\n          </v-btn>\n        </v-layout>\n        <v-btn flat @click=\"atHigherLevelDialog=false\" color=\"red\">Close</v-btn>\n      </v-card>\n    </v-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: ['charIndex'],\n  computed: {\n    character() {\n      return this.$store.state.characters[this.charIndex]\n    },\n    classItem() {\n      return this.character.classes[this.selectedClass]\n    },\n    concentrating() {\n      return this.character.concentrating\n    },\n    currSpellInfo() {\n      return this.$store.state.spellsInfo.currSpellInfo\n    },\n    currSpellClass() {\n      return this.$store.state.spellsInfo.className\n    },\n    magicClassOpts() {\n      return this.$store.state.magicClassOpts\n    },\n    spellOpts() {\n      return this.$store.state.spellsInfo.spellList\n    },\n    workingSlots() {\n      return this.classItem.workingSlots\n    },\n  },\n  data() {\n    return {\n      spellSearchDialogOpts: {\n        Level: 'Level',\n        School: 'School',\n        Duration: 'Duration',\n        SpellRange: 'Range',\n        Components: 'Components',\n      }, // why is this shameful?\n      classChoiceDialog: false,\n      spellSearchDialog: false,\n      atHigherLevelDialog: false,\n      classChoices: [],\n      input: '',\n      spellInput: '',\n      selectedClass: 0,\n      snackbarMessage: '',\n      snackbar: false,\n    }\n  },\n  watch: {\n    spellInput(val) {\n      if (\n        this.currSpellInfo.hasOwnProperty('Name') &&\n        val === this.currSpellInfo.Name\n      ) {\n        return\n      }\n      let r = new Request('http://localhost:8010/magic/spell/' + val, {\n        method: 'GET',\n      })\n      fetch(r)\n        .then(response => {\n          if (response.status === 200) {\n            return response.json()\n          } else {\n            throw new Error('Something went wrong on api server!')\n          }\n        })\n        .then(response => {\n          this.$store.commit('setSpellInfo', response)\n        })\n        .catch(error => {\n          console.error(error)\n        })\n    },\n  },\n  methods: {\n    spellPreflight() {\n      let magicClasses = []\n      for (let c in this.character.classes) {\n        if (this.magicClassOpts.includes(this.character.classes[c].classname)) {\n          magicClasses.push(c)\n        }\n      }\n      if (magicClasses.length > 1) {\n        this.classChoices = magicClasses\n        this.classChoiceDialog = true\n      } else if (magicClasses.length === 1) {\n        this.selectedClass = 0\n        this.spellSearchDialog = true\n        this.fetchSpellOpts()\n      } else {\n        this.$store.commit('showSnackbar', {\n          message: 'Cannot Cast Spells: No Magic Classes',\n        })\n      }\n    },\n    fetchSpellOpts() {\n      if (this.currSpellClass === this.classItem.classname) {\n        return\n      }\n      let strBody = JSON.stringify({\n        classes: [this.classItem.classname],\n        spellName: '',\n      })\n      let r = new Request('http://localhost:8010/magic/search/', {\n        method: 'Post',\n        body: strBody,\n      })\n      let opts = []\n      fetch(r)\n        .then(response => {\n          if (response.status === 200) {\n            return response.json()\n          } else {\n            throw new Error('Something went wrong on api server!')\n          }\n        })\n        .then(response => {\n          opts = response.spellOpts\n          this.$store.commit('setSpellOpts', {\n            spellOpts: opts,\n            className: this.classItem.classname,\n          })\n          this.spellSearchDialog = true\n        })\n        .catch(error => {\n          console.error(error)\n        })\n    },\n    stopConcentrating() {\n      this.$store.commit('stopConcentrating', this.charIndex)\n      this.$store.commit('hideSnackbar')\n    },\n    castSpell() {\n      if (\n        this.concentrating &&\n        this.currSpellInfo.hasOwnProperty('Concentration')\n      ) {\n        // launch concentration snackbar\n        this.$store.commit('showSnackbar', {\n          message: 'Concentrating on ' + this.concentrating,\n          func: this.stopConcentrating,\n          buttonMessage: 'Stop Concentrating',\n        })\n        return\n      }\n      if (this.workingSlots[this.currSpellInfo.Level.toString()] !== 0) {\n        this.$store.commit('decrementSlot', {\n          charIndex: this.charIndex,\n          classIndex: this.selectedClass,\n          level: this.currSpellInfo.Level,\n        })\n        this.spellSearchDialog = false\n        return\n      }\n      let slotsAvailable = false\n      for (let i = this.currSpellInfo.Level + 1; i < 10; i++) {\n        if (this.workingSlots[i.toString()] > 0) {\n          slotsAvailable = true\n          break\n        }\n      }\n      let payload = {\n        message: 'No slots available at spell level',\n      }\n      if (slotsAvailable) {\n        payload['func'] = this.openAtHigherLevelDialog\n        payload['buttonMessage'] = 'Cast at Higher Level?'\n      }\n      this.$store.commit('showSnackbar', payload)\n    },\n    openAtHigherLevelDialog() {\n      this.atHigherLevelDialog = true\n      this.$store.commit('hideSnackbar')\n    },\n    castSpellAtLvl(level) {\n      this.$store.commit('decrementSlot', {\n        charIndex: this.charIndex,\n        classIndex: this.selectedClass,\n        level: level,\n      })\n      this.atHigherLevelDialog = false\n      this.spellSearchDialog = false\n    },\n  },\n}\n</script>\n"],"sourceRoot":"src/components"}]}